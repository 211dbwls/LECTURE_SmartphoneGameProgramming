같은 일을 하는 것을 묶는 것 : class
220331_T_SampleGame 이어서
Ball.java 추가

중복 코드 정리

- 

Vector 성능이 안좋아서 사용하지 않음
-> ArrayList 사용

-

공 여러 개 생성

-

Fighter.java 추가
Ball.java ctrl + 드래그해서 복사

fighter 생성

- 

onTouchEvent
클릭한 곳으로 이동하도록

- 

클릭하면서 움직일 경우 따라서 이동하도록

- 

Bitmap 로드방법 변경

-

fighter 선언과 동시에 생성 불가
view가 제대로 생성되지 않은 상태에서 호출할 수 없음
Rect()이나 Paint()같은 간단한 코드는  호출 가능하지만 
리소스를 로드하는 등 많은 일을 하는 것을 생성하는 것은 불가능.

- 

종류가 많아지면 코드가 늘어남(예 update()등)
이를 보완하기 위해 하나의 array안에  사용하는 것을  넣어서 사용
하나의 array에 넣을려면 같은 클래스에서  파생되어야 함(예 gameObject)
수업에서는 위의 방법 대신 인터페이스 사용
장점 : 무조건 하나의 클래스에서 파생되지 않아도 됨

-

GameObejct Interface 생성
